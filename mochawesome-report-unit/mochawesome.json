{
  "stats": {
    "suites": 12,
    "tests": 31,
    "passes": 31,
    "pending": 0,
    "failures": 0,
    "start": "2018-03-17T08:01:56.280Z",
    "end": "2018-03-17T08:01:56.385Z",
    "duration": 105,
    "testsRegistered": 31,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "29c96ff7-faad-495f-a47e-10b400f0abba",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "91435e2f-3752-41b6-bc12-6ceb3688f8be",
        "title": "configureComponent",
        "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
        "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "configureComponent \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "configureComponent = inject({\n  './get-component-props': getComponentProps,\n  './get-label-component-props': getLabelComponentProps,\n  './get-label-component': getLabelComponent,\n  './get-component': getComponent\n}).default;",
            "err": {},
            "isRoot": false,
            "uuid": "0612472b-8901-4c48-aaab-9060ab57ac85",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "delegates to helper functions - control",
            "fullTitle": "configureComponent delegates to helper functions - control",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var props = { schema: { title: 'Default title' } };\nvar expectedComponent = 'x';\nvar expectedLabelComponent = 'y';\nvar expectedComponentProps = { 'a': 'a' };\nvar expectedLabelComponentProps = { 'b': 'b' };\ngetComponent.returns(expectedComponent);\ngetLabelComponent.returns(expectedLabelComponent);\ngetComponentProps.returns(expectedComponentProps);\ngetLabelComponentProps.returns(expectedLabelComponentProps);\nvar _configureComponent = configureComponent(props),\n    componentProps = _configureComponent.componentProps,\n    labelComponentProps = _configureComponent.labelComponentProps,\n    Component = _configureComponent.Component,\n    LabelComponent = _configureComponent.LabelComponent,\n    className = _configureComponent.className,\n    title = _configureComponent.title;\n(0, _chai.expect)(Component).to.equal(expectedComponent);\n(0, _chai.expect)(LabelComponent).to.equal(expectedLabelComponent);\n(0, _chai.expect)(componentProps).to.deep.equal(expectedComponentProps);\n(0, _chai.expect)(labelComponentProps).to.deep.equal(expectedLabelComponentProps);\n(0, _chai.expect)(className).to.be.null;\n(0, _chai.expect)(title).to.equal(props.schema.title);",
            "err": {},
            "isRoot": false,
            "uuid": "c3f99ec0-8ebb-4913-a349-c88f106a03dd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "substitutes title for ui:title if present",
            "fullTitle": "configureComponent substitutes title for ui:title if present",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var schema = { 'title': 'Default title' };\nvar uiSchema = { 'ui:title': 'Another title' };\nvar config = configureComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(config.title).to.equal('Another title');",
            "err": {},
            "isRoot": false,
            "uuid": "3de425c0-802f-4a76-b9da-5b333550e50a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "sets classname for textarea",
            "fullTitle": "configureComponent sets classname for textarea",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var schema = {};\nvar uiSchema = { 'ui:widget': 'textarea' };\nvar _configureComponent2 = configureComponent({ schema: schema, uiSchema: uiSchema }),\n    className = _configureComponent2.className;\n(0, _chai.expect)(className).to.equal('textarea');",
            "err": {},
            "isRoot": false,
            "uuid": "19af98da-2a03-483c-8a39-adb4174391dd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "no LabelComponent if no title",
            "fullTitle": "configureComponent no LabelComponent if no title",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var schema = {};\nvar _configureComponent3 = configureComponent({ schema: schema }),\n    LabelComponent = _configureComponent3.LabelComponent;\n(0, _chai.expect)(LabelComponent).to.be.undefined;",
            "err": {},
            "isRoot": false,
            "uuid": "27040146-206d-40c3-916b-2f9d8ca98423",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c3f99ec0-8ebb-4913-a349-c88f106a03dd",
          "3de425c0-802f-4a76-b9da-5b333550e50a",
          "19af98da-2a03-483c-8a39-adb4174391dd",
          "27040146-206d-40c3-916b-2f9d8ca98423"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "88db0309-0588-4780-9ef5-8f2623e4c54d",
        "title": "getComponent",
        "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
        "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "getComponent \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "InputSpy = _sinon2.default.spy();\nRadioGroupSpy = _sinon2.default.spy();\nCheckboxSpy = _sinon2.default.spy();\nSelectSpy = _sinon2.default.spy();\ngetComponent = inject({\n  'material-ui/Input': {\n    default: InputSpy\n  },\n  '../components': {\n    RadioGroup: RadioGroupSpy,\n    Checkbox: CheckboxSpy,\n    Select: SelectSpy\n  }\n}).default;",
            "err": {},
            "isRoot": false,
            "uuid": "2870d8f7-6dcd-4cdb-9214-07bc21d785a5",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "configures props for simple field",
            "fullTitle": "getComponent configures props for simple field",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var schema = {\n  'title': 'First name',\n  'type': 'string'\n};\nvar required = [];\nvar path = 'firstName';\nvar uiSchema = {};\n// const data = 'Maxamillian';\nvar htmlId = 'unq';\nvar onChange = _sinon2.default.spy();\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema, required: required, path: path, htmlId: htmlId, onChange: onChange });\n(0, _chai.expect)(Component.id).to.equal(InputSpy.id);",
            "err": {},
            "isRoot": false,
            "uuid": "728314f5-5980-42b7-9f6d-50afa6ad8f0a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "62028465-7a6a-4281-9289-1e9d053de573",
            "title": "yields Component",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
            "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Checkbox when type=boolean",
                "fullTitle": "getComponent yields Component Checkbox when type=boolean",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {\n  'type': 'boolean'\n};\nvar uiSchema = {};\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(Component.id).to.equal(CheckboxSpy.id);",
                "err": {},
                "isRoot": false,
                "uuid": "7b5ae93c-2776-4dd8-8d06-f91dd4931cf9",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select when schema.enum",
                "fullTitle": "getComponent yields Component Select when schema.enum",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {\n  'enum': ['one', 'two', 'three']\n};\nvar uiSchema = {};\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(Component.id).to.equal(SelectSpy.id);",
                "err": {},
                "isRoot": false,
                "uuid": "8d1771e2-f800-4a89-8636-730a5883f030",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select when schema.enum, regardless of type",
                "fullTitle": "getComponent yields Component Select when schema.enum, regardless of type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {\n  'type': 'number',\n  'enum': ['one', 'two', 'three']\n};\nvar uiSchema = {};\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(Component.id).to.equal(SelectSpy.id);",
                "err": {},
                "isRoot": false,
                "uuid": "9125ab2f-8454-4a84-ab4f-8b80ad974c80",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [
              {
                "uuid": "402a80c3-f6e3-43c5-99a2-5ee806d61cdd",
                "title": "depending on ui:widget",
                "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
                "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "-> RadioGroup when ui:widget=radio and schema.enum",
                    "fullTitle": "getComponent yields Component depending on ui:widget -> RadioGroup when ui:widget=radio and schema.enum",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var schema = {\n  'enum': ['one', 'two', 'three']\n};\nvar uiSchema = {\n  'ui:widget': 'radio'\n};\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(Component.id).to.equal(RadioGroupSpy.id);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "824bbf28-8e16-48a8-93cf-df9ad2189b52",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Checkbox when ui:widget=radio and schema.enum",
                    "fullTitle": "getComponent yields Component depending on ui:widget Checkbox when ui:widget=radio and schema.enum",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var schema = {\n  'enum': ['one', 'two', 'three']\n};\nvar uiSchema = {\n  'ui:widget': 'radio'\n};\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(Component.id).to.equal(RadioGroupSpy.id);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "288384a2-f14d-43ed-add4-fbe8f7cff750",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "824bbf28-8e16-48a8-93cf-df9ad2189b52",
                  "288384a2-f14d-43ed-add4-fbe8f7cff750"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              }
            ],
            "passes": [
              "7b5ae93c-2776-4dd8-8d06-f91dd4931cf9",
              "8d1771e2-f800-4a89-8636-730a5883f030",
              "9125ab2f-8454-4a84-ab4f-8b80ad974c80"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [
          "728314f5-5980-42b7-9f6d-50afa6ad8f0a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "e8569fd5-7c63-415b-874b-f7fd71407c65",
        "title": "Field",
        "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
        "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "mounts with standard attributes (control)",
            "fullTitle": "Field mounts with standard attributes (control)",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var componentProps = {\n  multiline: true\n};\nvar data = 'Hello';\nvar type = 'string';\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { type: type, data: data, classes: classes, componentProps: componentProps }));\n// test FormControl properties\nvar FC = wrapper.find(_Form.FormControl);\n(0, _chai.expect)(FC).to.have.length(1);\n(0, _chai.expect)(FC).to.have.prop('className').match(/rootClassName/).not.match(/withLabelClass/);\n// no helpText, descriptionText or LabelComponent\n(0, _chai.expect)(FC.children()).to.have.length(1); // control\n// test Component properties\nvar Component = wrapper.find(_Input2.default); // control\n(0, _chai.expect)(Component).to.be.present();\n(0, _chai.expect)(Component).to.have.prop('multiline', componentProps.multiline);\n(0, _chai.expect)(Component).to.have.prop('value', data);\n(0, _chai.expect)(Component).to.have.prop('type', type);\n(0, _chai.expect)(Component).to.not.have.prop('className'); // control",
            "err": {},
            "isRoot": false,
            "uuid": "fd3b8fc2-0e1e-4d9b-b7f6-e9d08b1be1ae",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "applies given className",
            "fullTitle": "Field applies given className",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { classes: classes, className: 'myComp' }));\nvar Component = wrapper.find(_Input2.default);\n(0, _chai.expect)(Component).to.be.present();\n(0, _chai.expect)(Component).to.have.prop('className', classes.myComp);",
            "err": {},
            "isRoot": false,
            "uuid": "ce4020a6-f1b2-4448-9f96-46ff0c7a8fde",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "renders provided Component",
            "fullTitle": "Field renders provided Component",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { Component: _components.RadioGroup }));\n(0, _chai.expect)(wrapper.find(_Input2.default)).to.not.be.present();\n(0, _chai.expect)(wrapper.find(_components.RadioGroup)).to.be.present();",
            "err": {},
            "isRoot": false,
            "uuid": "60d4a978-e2e4-4276-b9c2-2f846c3a6c97",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "renders provided LabelComponent with title and labelComponentProps",
            "fullTitle": "Field renders provided LabelComponent with title and labelComponentProps",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var labelComponentProps = {\n  style: 'bold'\n};\nvar title = 'Hello';\nvar DummyLabel = function DummyLabel(_ref) {\n  var children = _ref.children;\n  return _react2.default.createElement(\n    'div',\n    null,\n    children\n  );\n};\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { title: title, labelComponentProps: labelComponentProps, LabelComponent: DummyLabel }));\nvar labelComp = wrapper.find(DummyLabel);\n(0, _chai.expect)(labelComp).to.be.present();\n(0, _chai.expect)(labelComp).to.have.prop('style', labelComponentProps.style);\n(0, _chai.expect)(labelComp.children()).to.have.length(1);\n(0, _chai.expect)(labelComp.childAt(0)).to.have.text(title);",
            "err": {},
            "isRoot": false,
            "uuid": "a4c32b39-84ed-4cf4-a97e-880f72778a7b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "renders provided descriptionText",
            "fullTitle": "Field renders provided descriptionText",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var descriptionText = 'This is a field';\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { classes: classes, descriptionText: descriptionText }));\nvar descriptionComp = wrapper.find('p');\n(0, _chai.expect)(descriptionComp).to.have.length(1);\n(0, _chai.expect)(descriptionComp).to.have.prop('className', classes.description);\n(0, _chai.expect)(descriptionComp).to.have.text(descriptionText);",
            "err": {},
            "isRoot": false,
            "uuid": "8a9f8a12-1056-4b58-b254-732dbe145752",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "renders provided helpText",
            "fullTitle": "Field renders provided helpText",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var helpText = 'Help! I need somebody!';\nvar id = 'unq-id';\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { id: id, helpText: helpText }));\nvar helpComp = wrapper.find(_Form.FormHelperText);\n(0, _chai.expect)(helpComp).to.be.present();\n(0, _chai.expect)(helpComp).to.have.prop('id', id + '-help');\n(0, _chai.expect)(helpComp.children()).to.have.length(1);\n(0, _chai.expect)(helpComp.childAt(0).text()).to.equal(helpText);",
            "err": {},
            "isRoot": false,
            "uuid": "23da24f7-5687-46c5-a426-a12cac6c6c4e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "calls onChange",
            "fullTitle": "Field calls onChange",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var onChange = _sinon2.default.spy();\nvar data = 'Some value';\nvar componentProps = {\n  onChange: onChange\n};\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { componentProps: componentProps, data: data }));\nvar inputComp = wrapper.find(_Input2.default);\ninputComp.simulate('change', 'value');\n(0, _chai.expect)(onChange).to.be.calledWith('value');",
            "err": {},
            "isRoot": false,
            "uuid": "a2ca3308-249b-4469-8fb3-17e1022cb8e7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "has withLabel className ",
            "fullTitle": "Field has withLabel className ",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { LabelComponent: _Form.FormLabel, classes: classes }));\n(0, _chai.expect)(wrapper).prop('className').match(/withLabelClass/);",
            "err": {},
            "isRoot": false,
            "uuid": "f0ac3b8f-edd0-4c8e-beac-948b85676c89",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "fd3b8fc2-0e1e-4d9b-b7f6-e9d08b1be1ae",
          "ce4020a6-f1b2-4448-9f96-46ff0c7a8fde",
          "60d4a978-e2e4-4276-b9c2-2f846c3a6c97",
          "a4c32b39-84ed-4cf4-a97e-880f72778a7b",
          "8a9f8a12-1056-4b58-b254-732dbe145752",
          "23da24f7-5687-46c5-a426-a12cac6c6c4e",
          "a2ca3308-249b-4469-8fb3-17e1022cb8e7",
          "f0ac3b8f-edd0-4c8e-beac-948b85676c89"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 15,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "62a3256b-4aa0-4234-9eb2-d91967c511d9",
        "title": "FieldSet",
        "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
        "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "217fbe69-098d-4d82-bc2f-45cdca8d31b2",
            "title": "FieldSet - control",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
            "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "mounts (control)",
                "fullTitle": "FieldSet FieldSet - control mounts (control)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {};\nvar data = {};\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSet, { classes: classes, schema: schema, data: data }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar ffComp = wrapper.find(_FieldSet.FieldSetContent);\n(0, _chai.expect)(ffComp).to.have.length(1);\n(0, _chai.expect)(ffComp).to.have.prop('schema', schema);\nvar legendComp = wrapper.find('legend');\n(0, _chai.expect)(legendComp).to.not.be.present();",
                "err": {},
                "isRoot": false,
                "uuid": "35cb482f-508b-455c-8281-8d3c6944e075",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "35cb482f-508b-455c-8281-8d3c6944e075"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "1c8a7c4e-f74a-4da5-ba33-8a9f021180f8",
            "title": "FieldSetObject",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
            "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "mounts with single field (control)",
                "fullTitle": "FieldSet FieldSetObject mounts with single field (control)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {\n  type: 'object',\n  properties: {\n    name: {\n      'type': 'string',\n      'title': 'Name'\n    }\n  }\n};\nvar data = { name: 'Bob' };\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSetObject, { classes: classes, schema: schema, data: data }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\n(0, _chai.expect)(wrapper).to.have.prop('className').not.match(/rowClassName/);\nvar ffComp = wrapper.find(_FormField2.default);\n(0, _chai.expect)(ffComp).to.have.length(1);\n(0, _chai.expect)(ffComp).to.have.prop('path', 'name');\n(0, _chai.expect)(ffComp).to.have.prop('data', data.name);\n(0, _chai.expect)(ffComp).to.have.prop('objectData').deep.equal(data);",
                "err": {},
                "isRoot": false,
                "uuid": "95cb6ed1-6a05-4d0d-bb8e-796b3ea5d26b",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "respects orientation hint",
                "fullTitle": "FieldSet FieldSetObject respects orientation hint",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {\n  type: 'object',\n  properties: {\n    name: {\n      'type': 'string',\n      'title': 'Name'\n    }\n  }\n};\nvar uiSchema = {\n  'ui:orientation': 'row'\n};\nvar data = { name: 'Bob' };\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSetObject, { classes: classes, schema: schema, data: data, uiSchema: uiSchema }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\n(0, _chai.expect)(wrapper).to.have.prop('className').match(/rowClassName/);\nvar ffComp = wrapper.find(_FormField2.default);\n(0, _chai.expect)(ffComp).to.have.length(1);\n(0, _chai.expect)(ffComp).to.have.prop('path', 'name');\n(0, _chai.expect)(ffComp).to.have.prop('data', data.name);",
                "err": {},
                "isRoot": false,
                "uuid": "ada6f69b-85b9-4e97-aba7-031a00ce9b95",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "95cb6ed1-6a05-4d0d-bb8e-796b3ea5d26b",
              "ada6f69b-85b9-4e97-aba7-031a00ce9b95"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 5,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "804328b7-64ed-4f63-9d9b-ea1ca4a5442c",
            "title": "FieldSetArray",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
            "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "handles simple, orderable list of strings",
                "fullTitle": "FieldSet FieldSetArray handles simple, orderable list of strings",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var path = 'names';\nvar defaultValue = 'abc';\nvar startIdx = 2;\nvar schema = {\n  type: 'array',\n  title: 'My list',\n  items: {\n    'type': 'string',\n    'title': 'Name',\n    'default': defaultValue\n  }\n};\nvar onMoveItemUp = _sinon2.default.stub();\nvar onMoveItemDown = _sinon2.default.stub();\nvar onDeleteItem = _sinon2.default.stub();\n(0, _forEach2.default)([0, 1], function (i) {\n  return onMoveItemUp.withArgs(path, startIdx + i).returns('moveUp' + i);\n});\n(0, _forEach2.default)([0, 1], function (i) {\n  return onMoveItemDown.withArgs(path, startIdx + i).returns('moveDown' + i);\n});\n(0, _forEach2.default)([0, 1], function (i) {\n  return onDeleteItem.withArgs(path, startIdx + i).returns('deleteItem' + i);\n});\nvar uiSchema = {\n  items: {\n    'ui:widget': 'textarea'\n  }\n};\nvar data = ['Bob', 'Harry'];\nvar onAddItem = _sinon2.default.spy();\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSetArray, {\n  startIdx: startIdx,\n  onAddItem: onAddItem,\n  onMoveItemUp: onMoveItemUp,\n  onMoveItemDown: onMoveItemDown,\n  onDeleteItem: onDeleteItem,\n  uiSchema: uiSchema,\n  path: path,\n  classes: classes,\n  schema: schema,\n  data: data\n}));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar ffComp = wrapper.find(_FieldSet.ReorderableFormField);\n(0, _chai.expect)(ffComp).to.have.length(2);\n(0, _forEach2.default)([0, 1], function (i) {\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('path', 'names[' + (i + startIdx) + ']');\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('data', data[i]);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('schema', schema.items);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('uiSchema', uiSchema.items);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('onMoveItemUp', 'moveUp' + i);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('onMoveItemDown', 'moveDown' + i);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('onDeleteItem', 'deleteItem' + i);\n});\n(0, _chai.expect)(ffComp.at(0)).to.have.prop('first', true);\n(0, _chai.expect)(ffComp.at(0)).to.have.prop('last', false);\n(0, _chai.expect)(ffComp.at(1)).to.have.prop('first', false);\n(0, _chai.expect)(ffComp.at(1)).to.have.prop('last', true);\nvar addButton = wrapper.find(_IconButton2.default);\n(0, _chai.expect)(addButton).to.be.present();\naddButton.simulate('click');\n(0, _chai.expect)(onAddItem).to.be.calledWith(path, defaultValue);",
                "err": {},
                "isRoot": false,
                "uuid": "d589a8b6-889c-4a2b-b9eb-f8c1adbf2e6d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "handles simple, fixed list of strings",
                "fullTitle": "FieldSet FieldSetArray handles simple, fixed list of strings",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var path = 'names';\nvar schema = {\n  type: 'array',\n  title: 'My list',\n  items: [{\n    'type': 'string',\n    'title': 'Name'\n  }, {\n    'type': 'boolean',\n    'title': 'Name'\n  }]\n};\nvar uiSchema = {\n  items: [{\n    'ui:widget': 'textarea'\n  }, {\n    'ui:widget': 'checkbox'\n  }]\n};\nvar data = ['Bob', false];\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSetArray, { uiSchema: uiSchema, path: path, classes: classes, schema: schema, data: data }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar ffComp = wrapper.find(_FormField2.default);\nvar rffComp = wrapper.find(_FieldSet.ReorderableFormField);\n(0, _chai.expect)(ffComp).to.have.length(2);\n(0, _chai.expect)(rffComp).to.have.length(0);\n(0, _forEach2.default)([0, 1], function (idx) {\n  (0, _chai.expect)(ffComp.at(idx)).to.have.prop('path', 'names[' + idx + ']');\n  (0, _chai.expect)(ffComp.at(idx)).to.have.prop('data', data[idx]);\n  (0, _chai.expect)(ffComp.at(idx)).to.have.prop('schema', schema.items[idx]);\n  (0, _chai.expect)(ffComp.at(idx)).to.have.prop('uiSchema', uiSchema.items[idx]);\n});",
                "err": {},
                "isRoot": false,
                "uuid": "e8699b89-fa6b-4f08-bbfc-3df6cbb0cbcd",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "handles simple, fixed list of strings with additional items",
                "fullTitle": "FieldSet FieldSetArray handles simple, fixed list of strings with additional items",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var path = 'names';\nvar onMoveItemUp = 'onMoveItemUp';\nvar onMoveItemDown = 'onMoveItemDown';\nvar onDeleteItem = 'onDeleteItem';\nvar schema = {\n  type: 'array',\n  title: 'My list',\n  items: [{\n    'type': 'string',\n    'title': 'Name'\n  }, {\n    'type': 'boolean',\n    'title': 'Name'\n  }],\n  additionalItems: {\n    'type': 'string',\n    'title': 'Name'\n  }\n};\nvar uiSchema = {\n  items: [{\n    'ui:widget': 'textarea'\n  }, {\n    'ui:widget': 'checkbox'\n  }],\n  additionalItems: {\n    'ui:title': 'Children'\n  }\n};\nvar data = ['Bob', false, 'Harry', 'Susan'];\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSetArray, {\n  onMoveItemUp: onMoveItemUp,\n  onMoveItemDown: onMoveItemDown,\n  onDeleteItem: onDeleteItem,\n  uiSchema: uiSchema,\n  path: path,\n  classes: classes,\n  schema: schema,\n  data: data\n}));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar ffComp = wrapper.find(_FormField2.default);\n(0, _chai.expect)(ffComp).to.have.length(2);\n(0, _forEach2.default)([0, 1], function (i) {\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('path', 'names[' + i + ']');\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('data', data[i]);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('schema', schema.items[i]);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('uiSchema', uiSchema.items[i]);\n  (0, _chai.expect)(ffComp.at(i)).to.not.have.prop('onMoveItemUp');\n  (0, _chai.expect)(ffComp.at(i)).to.not.have.prop('onMoveItemDown');\n  (0, _chai.expect)(ffComp.at(i)).to.not.have.prop('onDeleteItem');\n});\nvar fsArrayComp = wrapper.find(_FieldSet.FieldSetArray);\n(0, _chai.expect)(fsArrayComp).to.be.present();\n(0, _chai.expect)(fsArrayComp).to.have.prop('path', path);\n(0, _chai.expect)(fsArrayComp).to.have.prop('data').deep.equal(['Harry', 'Susan']);\n(0, _chai.expect)(fsArrayComp).to.have.prop('schema').deep.equal({ type: 'array', items: schema.additionalItems });\n(0, _chai.expect)(fsArrayComp).to.have.prop('uiSchema', uiSchema.additionalItems);\n(0, _chai.expect)(fsArrayComp).to.have.prop('startIdx', schema.items.length);\n(0, _chai.expect)(fsArrayComp).to.have.prop('onMoveItemUp', onMoveItemUp);\n(0, _chai.expect)(fsArrayComp).to.have.prop('onMoveItemDown', onMoveItemDown);\n(0, _chai.expect)(fsArrayComp).to.have.prop('onDeleteItem', onDeleteItem);",
                "err": {},
                "isRoot": false,
                "uuid": "cc4abe9e-fdf2-40fe-8a53-23581557344a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d589a8b6-889c-4a2b-b9eb-f8c1adbf2e6d",
              "e8699b89-fa6b-4f08-bbfc-3df6cbb0cbcd",
              "cc4abe9e-fdf2-40fe-8a53-23581557344a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 17,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "b7426541-e07f-49af-977d-c4cb68eeec02",
            "title": "ReorderControls",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
            "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "renders buttons with callbacks",
                "fullTitle": "FieldSet ReorderControls renders buttons with callbacks",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "// prepare\nvar onMoveItemUp = _sinon2.default.spy();\nvar onMoveItemDown = _sinon2.default.spy();\nvar onDeleteItem = _sinon2.default.spy();\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawReorderControls, {\n  onMoveItemDown: onMoveItemDown,\n  onDeleteItem: onDeleteItem,\n  onMoveItemUp: onMoveItemUp,\n  classes: classes\n}));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar buttonList = wrapper.find(_IconButton2.default);\n(0, _chai.expect)(buttonList).to.have.length(3);\nbuttonList.at(0).simulate('click');\n(0, _chai.expect)(onMoveItemUp).to.have.been.called;\nbuttonList.at(1).simulate('click');\n(0, _chai.expect)(onMoveItemDown).to.have.been.called;\nbuttonList.at(2).simulate('click');\n(0, _chai.expect)(onDeleteItem).to.have.been.called;",
                "err": {},
                "isRoot": false,
                "uuid": "265073c2-3eca-4fdd-96ee-118ae7a4f567",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "ReorderControls - first",
                "fullTitle": "FieldSet ReorderControls ReorderControls - first",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawReorderControls, { first: true, last: false, classes: classes }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar buttonList = wrapper.find(_IconButton2.default);\n(0, _chai.expect)(buttonList).to.have.length(3);\n(0, _chai.expect)(buttonList.at(0)).to.have.prop('disabled', true);\n(0, _chai.expect)(buttonList.at(1)).to.have.prop('disabled', false);\n(0, _chai.expect)(buttonList.at(2)).to.not.have.prop('disabled');",
                "err": {},
                "isRoot": false,
                "uuid": "35d831c7-4923-4e46-a8a6-1dad14350c18",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "ReorderControls - last",
                "fullTitle": "FieldSet ReorderControls ReorderControls - last",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawReorderControls, { first: false, last: true, classes: classes }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar buttonList = wrapper.find(_IconButton2.default);\n(0, _chai.expect)(buttonList).to.have.length(3);\n(0, _chai.expect)(buttonList.at(0)).to.have.prop('disabled', false);\n(0, _chai.expect)(buttonList.at(1)).to.have.prop('disabled', true);\n(0, _chai.expect)(buttonList.at(2)).to.not.have.prop('disabled');",
                "err": {},
                "isRoot": false,
                "uuid": "9cb3a60f-554d-4d7e-99be-75b30cce2d30",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "265073c2-3eca-4fdd-96ee-118ae7a4f567",
              "35d831c7-4923-4e46-a8a6-1dad14350c18",
              "9cb3a60f-554d-4d7e-99be-75b30cce2d30"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 7,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "f4a9aa39-ee44-4669-bd48-a94d74e93aff",
            "title": "ReorderableFormField",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
            "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ReorderableFormField - control",
                "fullTitle": "FieldSet ReorderableFormField ReorderableFormField - control",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var path = 'path';\nvar first = 'first';\nvar last = 'last';\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawReorderableFormField, {\n  path: path,\n  first: first,\n  last: last,\n  classes: classes\n}));\n// check\nvar ffComp = wrapper.find(_FormField2.default);\n(0, _chai.expect)(ffComp).to.have.length(1);\nvar controls = wrapper.find(_FieldSet.ReorderControls);\n(0, _chai.expect)(controls).to.have.length(1);\n(0, _chai.expect)(controls).to.have.prop('first', first);\n(0, _chai.expect)(controls).to.have.prop('last', last);",
                "err": {},
                "isRoot": false,
                "uuid": "6547fca2-370c-45b0-b0c6-02feb56ab85c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6547fca2-370c-45b0-b0c6-02feb56ab85c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "193cdf24-057d-4cf8-8d63-56548b263372",
        "title": "FormField",
        "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1521273309498/bundle.js",
        "file": "/.tmp/mocha-webpack/1521273309498/bundle.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "mounts with single field (control)",
            "fullTitle": "FormField mounts with single field (control)",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var path = 'name';\nvar onChange = _sinon2.default.stub();\nvar schema = {\n  'type': 'string',\n  'title': 'First Name'\n};\nvar uiSchema = {};\nvar data = 'Bob';\nonChange.returns('onChangeFunc');\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FormField.RawFormField, { path: path, classes: classes, schema: schema, uiSchema: uiSchema, data: data, onChange: onChange }));\n// check\n(0, _chai.expect)(wrapper).to.be.present();\nvar ffComp = wrapper.find(_fields2.default);\n(0, _chai.expect)(ffComp).to.have.length(1);\n(0, _chai.expect)(ffComp).to.have.prop('className', classes.field);\n(0, _chai.expect)(ffComp).to.have.prop('path', path);\n(0, _chai.expect)(ffComp).to.have.prop('schema', schema);\n(0, _chai.expect)(ffComp).to.have.prop('data', data);\n(0, _chai.expect)(ffComp).to.have.prop('uiSchema', uiSchema);\n(0, _chai.expect)(onChange).calledWith(path);\n(0, _chai.expect)(ffComp).to.have.prop('onChange', 'onChangeFunc');",
            "err": {},
            "isRoot": false,
            "uuid": "0b087d6a-e878-4c61-b1ad-c876dc805d5b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "spreads additional properties to Field",
            "fullTitle": "FormField spreads additional properties to Field",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var schema = {\n  name: {\n    'type': 'string'\n  }\n};\nvar myProp = 'blah';\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FormField.RawFormField, { classes: classes, schema: schema, myProp: myProp }));\n// check\n(0, _chai.expect)(wrapper).to.be.present();\nvar ffComp = wrapper.find(_fields2.default);\n(0, _chai.expect)(ffComp).to.have.prop('myProp', myProp);",
            "err": {},
            "isRoot": false,
            "uuid": "0b0c61a7-6963-47f3-bb03-28b82dc9ef1c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "renders object as FieldSet, passing all properties",
            "fullTitle": "FormField renders object as FieldSet, passing all properties",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var onChange = _sinon2.default.stub();\nvar path = 'name';\nvar schema = {\n  'type': 'object',\n  'properties': {\n    firstName: {\n      type: 'string',\n      title: 'First Name'\n    },\n    surname: {\n      type: 'string',\n      title: 'Surname'\n    }\n  }\n};\nvar data = {\n  firstName: 'Bob',\n  surname: 'Hope'\n};\nvar uiSchema = {\n  firstName: {},\n  surname: {}\n};\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FormField.RawFormField, { classes: classes, uiSchema: uiSchema, path: path, schema: schema, data: data, onChange: onChange }));\n// check\n(0, _chai.expect)(wrapper).to.be.present();\nvar fsComp = wrapper.find(_FieldSet2.default);\n(0, _chai.expect)(fsComp).to.be.have.length(1);\n(0, _chai.expect)(fsComp).to.have.prop('path', path);\n(0, _chai.expect)(fsComp).to.have.prop('schema', schema);\n(0, _chai.expect)(fsComp).to.have.prop('data', data);\n(0, _chai.expect)(fsComp).to.have.prop('uiSchema', uiSchema);\n(0, _chai.expect)(fsComp).to.have.prop('onChange', onChange);",
            "err": {},
            "isRoot": false,
            "uuid": "386a142d-fb80-4618-9d27-45200b49f2e1",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "0b087d6a-e878-4c61-b1ad-c876dc805d5b",
          "0b0c61a7-6963-47f3-bb03-28b82dc9ef1c",
          "386a142d-fb80-4618-9d27-45200b49f2e1"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 6,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}