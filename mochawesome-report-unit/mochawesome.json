{
  "stats": {
    "suites": 12,
    "tests": 31,
    "passes": 31,
    "pending": 0,
    "failures": 0,
    "start": "2018-02-25T21:47:58.352Z",
    "end": "2018-02-25T21:47:58.696Z",
    "duration": 344,
    "testsRegistered": 31,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "c6596ff4-56b4-4d5e-8418-f9929f3cea8b",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "77b92002-3941-41ba-b02f-72c598895a30",
        "title": "configureComponent",
        "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
        "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "configureComponent \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "configureComponent = inject({\n  './get-component-props': getComponentProps,\n  './get-label-component-props': getLabelComponentProps,\n  './get-label-component': getLabelComponent,\n  './get-component': getComponent\n}).default;",
            "err": {},
            "isRoot": false,
            "uuid": "5d47e06e-4157-47b7-87a1-6b979bad8d58",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "delegates to helper functions - control",
            "fullTitle": "configureComponent delegates to helper functions - control",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var props = { schema: { title: 'Default title' } };\nvar expectedComponent = 'x';\nvar expectedLabelComponent = 'y';\nvar expectedComponentProps = { 'a': 'a' };\nvar expectedLabelComponentProps = { 'b': 'b' };\ngetComponent.returns(expectedComponent);\ngetLabelComponent.returns(expectedLabelComponent);\ngetComponentProps.returns(expectedComponentProps);\ngetLabelComponentProps.returns(expectedLabelComponentProps);\nvar _configureComponent = configureComponent(props),\n    componentProps = _configureComponent.componentProps,\n    labelComponentProps = _configureComponent.labelComponentProps,\n    Component = _configureComponent.Component,\n    LabelComponent = _configureComponent.LabelComponent,\n    className = _configureComponent.className,\n    title = _configureComponent.title;\n(0, _chai.expect)(Component).to.equal(expectedComponent);\n(0, _chai.expect)(LabelComponent).to.equal(expectedLabelComponent);\n(0, _chai.expect)(componentProps).to.deep.equal(expectedComponentProps);\n(0, _chai.expect)(labelComponentProps).to.deep.equal(expectedLabelComponentProps);\n(0, _chai.expect)(className).to.be.null;\n(0, _chai.expect)(title).to.equal(props.schema.title);",
            "err": {},
            "isRoot": false,
            "uuid": "c0fdb891-ea2a-4ca0-9166-8a341ece945b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "substitutes title for ui:title if present",
            "fullTitle": "configureComponent substitutes title for ui:title if present",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var schema = { 'title': 'Default title' };\nvar uiSchema = { 'ui:title': 'Another title' };\nvar config = configureComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(config.title).to.equal('Another title');",
            "err": {},
            "isRoot": false,
            "uuid": "de379c24-d393-43dc-bc59-4ce2b4f92453",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "sets classname for textarea",
            "fullTitle": "configureComponent sets classname for textarea",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var schema = {};\nvar uiSchema = { 'ui:widget': 'textarea' };\nvar _configureComponent2 = configureComponent({ schema: schema, uiSchema: uiSchema }),\n    className = _configureComponent2.className;\n(0, _chai.expect)(className).to.equal('textarea');",
            "err": {},
            "isRoot": false,
            "uuid": "a19f96ab-0508-4aea-93d3-3514987e5c21",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "no LabelComponent if no title",
            "fullTitle": "configureComponent no LabelComponent if no title",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var schema = {};\nvar _configureComponent3 = configureComponent({ schema: schema }),\n    LabelComponent = _configureComponent3.LabelComponent;\n(0, _chai.expect)(LabelComponent).to.be.undefined;",
            "err": {},
            "isRoot": false,
            "uuid": "aa34c46a-ef85-483b-98ac-c6388706604f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c0fdb891-ea2a-4ca0-9166-8a341ece945b",
          "de379c24-d393-43dc-bc59-4ce2b4f92453",
          "a19f96ab-0508-4aea-93d3-3514987e5c21",
          "aa34c46a-ef85-483b-98ac-c6388706604f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 8,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "4b08df60-1ad2-437f-b3dc-924f35109938",
        "title": "getComponent",
        "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
        "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "getComponent \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "InputSpy = _sinon2.default.spy();\nRadioGroupSpy = _sinon2.default.spy();\nCheckboxSpy = _sinon2.default.spy();\nSelectSpy = _sinon2.default.spy();\ngetComponent = inject({\n  'material-ui/Input': {\n    default: InputSpy\n  },\n  '../components': {\n    RadioGroup: RadioGroupSpy,\n    Checkbox: CheckboxSpy,\n    Select: SelectSpy\n  }\n}).default;",
            "err": {},
            "isRoot": false,
            "uuid": "4ac8bc36-0fdf-4241-bfd1-b0276e7b7f4c",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "configures props for simple field",
            "fullTitle": "getComponent configures props for simple field",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var schema = {\n  'title': 'First name',\n  'type': 'string'\n};\nvar required = [];\nvar path = 'firstName';\nvar uiSchema = {};\n// const data = 'Maxamillian';\nvar htmlId = 'unq';\nvar onChange = _sinon2.default.spy();\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema, required: required, path: path, htmlId: htmlId, onChange: onChange });\n(0, _chai.expect)(Component.id).to.equal(InputSpy.id);",
            "err": {},
            "isRoot": false,
            "uuid": "099acde3-4a31-4b9f-be87-893f08a2e31c",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [
          {
            "uuid": "b975e904-47da-4dc1-837d-fb5219b5972f",
            "title": "yields Component",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
            "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Checkbox when type=boolean",
                "fullTitle": "getComponent yields Component Checkbox when type=boolean",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {\n  'type': 'boolean'\n};\nvar uiSchema = {};\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(Component.id).to.equal(CheckboxSpy.id);",
                "err": {},
                "isRoot": false,
                "uuid": "83019e8b-8c1d-4a93-b751-bee89b5c35ca",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select when schema.enum",
                "fullTitle": "getComponent yields Component Select when schema.enum",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {\n  'enum': ['one', 'two', 'three']\n};\nvar uiSchema = {};\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(Component.id).to.equal(SelectSpy.id);",
                "err": {},
                "isRoot": false,
                "uuid": "cb8556ec-568c-498d-9dba-51576d4f4347",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Select when schema.enum, regardless of type",
                "fullTitle": "getComponent yields Component Select when schema.enum, regardless of type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {\n  'type': 'number',\n  'enum': ['one', 'two', 'three']\n};\nvar uiSchema = {};\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(Component.id).to.equal(SelectSpy.id);",
                "err": {},
                "isRoot": false,
                "uuid": "8c2a8a03-3235-466b-82c4-6008d7e50e84",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [
              {
                "uuid": "6109cf9f-d4f0-4d34-aa74-692ffd7fb6e6",
                "title": "depending on ui:widget",
                "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
                "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "-> RadioGroup when ui:widget=radio and schema.enum",
                    "fullTitle": "getComponent yields Component depending on ui:widget -> RadioGroup when ui:widget=radio and schema.enum",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var schema = {\n  'enum': ['one', 'two', 'three']\n};\nvar uiSchema = {\n  'ui:widget': 'radio'\n};\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(Component.id).to.equal(RadioGroupSpy.id);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "173c4be8-ed20-4078-9b2f-2ab1f8ed845b",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "Checkbox when ui:widget=radio and schema.enum",
                    "fullTitle": "getComponent yields Component depending on ui:widget Checkbox when ui:widget=radio and schema.enum",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var schema = {\n  'enum': ['one', 'two', 'three']\n};\nvar uiSchema = {\n  'ui:widget': 'radio'\n};\nvar Component = getComponent({ schema: schema, uiSchema: uiSchema });\n(0, _chai.expect)(Component.id).to.equal(RadioGroupSpy.id);",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6faee4ea-4d24-45d3-ab27-db46656a96d9",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "173c4be8-ed20-4078-9b2f-2ab1f8ed845b",
                  "6faee4ea-4d24-45d3-ab27-db46656a96d9"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              }
            ],
            "passes": [
              "83019e8b-8c1d-4a93-b751-bee89b5c35ca",
              "cb8556ec-568c-498d-9dba-51576d4f4347",
              "8c2a8a03-3235-466b-82c4-6008d7e50e84"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [
          "099acde3-4a31-4b9f-be87-893f08a2e31c"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "f24c4ce8-e6d5-4abc-89c2-ab99f81ffefb",
        "title": "Field",
        "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
        "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "mounts with standard attributes (control)",
            "fullTitle": "Field mounts with standard attributes (control)",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var componentProps = {\n  multiline: true\n};\nvar data = 'Hello';\nvar type = 'string';\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { type: type, data: data, classes: classes, componentProps: componentProps }));\n// test FormControl properties\nvar FC = wrapper.find(_Form.FormControl);\n(0, _chai.expect)(FC).to.have.length(1);\n(0, _chai.expect)(FC).to.have.prop('className').match(/rootClassName/).not.match(/withLabelClass/);\n// no helpText, descriptionText or LabelComponent\n(0, _chai.expect)(FC.children()).to.have.length(1); // control\n// test Component properties\nvar Component = wrapper.find(_Input2.default); // control\n(0, _chai.expect)(Component).to.be.present();\n(0, _chai.expect)(Component).to.have.prop('multiline', componentProps.multiline);\n(0, _chai.expect)(Component).to.have.prop('value', data);\n(0, _chai.expect)(Component).to.have.prop('type', type);\n(0, _chai.expect)(Component).to.not.have.prop('className'); // control",
            "err": {},
            "isRoot": false,
            "uuid": "dc42a1ea-1217-4a88-892d-7235def8449b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "applies given className",
            "fullTitle": "Field applies given className",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { classes: classes, className: 'myComp' }));\nvar Component = wrapper.find(_Input2.default);\n(0, _chai.expect)(Component).to.be.present();\n(0, _chai.expect)(Component).to.have.prop('className', classes.myComp);",
            "err": {},
            "isRoot": false,
            "uuid": "73ea5aa6-503c-43ad-a9b3-ffff6194e217",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "renders provided Component",
            "fullTitle": "Field renders provided Component",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { Component: _components.RadioGroup }));\n(0, _chai.expect)(wrapper.find(_Input2.default)).to.not.be.present();\n(0, _chai.expect)(wrapper.find(_components.RadioGroup)).to.be.present();",
            "err": {},
            "isRoot": false,
            "uuid": "84f2f4ff-af7f-4744-93ab-6edaa19f8bf5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "renders provided LabelComponent with title and labelComponentProps",
            "fullTitle": "Field renders provided LabelComponent with title and labelComponentProps",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var labelComponentProps = {\n  style: 'bold'\n};\nvar title = 'Hello';\nvar DummyLabel = function DummyLabel(_ref) {\n  var children = _ref.children;\n  return _react2.default.createElement(\n    'div',\n    null,\n    children\n  );\n};\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { title: title, labelComponentProps: labelComponentProps, LabelComponent: DummyLabel }));\nvar labelComp = wrapper.find(DummyLabel);\n(0, _chai.expect)(labelComp).to.be.present();\n(0, _chai.expect)(labelComp).to.have.prop('style', labelComponentProps.style);\n(0, _chai.expect)(labelComp.children()).to.have.length(1);\n(0, _chai.expect)(labelComp.childAt(0)).to.have.text(title);",
            "err": {},
            "isRoot": false,
            "uuid": "2e20aca0-d963-4a13-b94d-02f432620260",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "renders provided descriptionText",
            "fullTitle": "Field renders provided descriptionText",
            "timedOut": false,
            "duration": 7,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var descriptionText = 'This is a field';\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { classes: classes, descriptionText: descriptionText }));\nvar descriptionComp = wrapper.find('p');\n(0, _chai.expect)(descriptionComp).to.have.length(1);\n(0, _chai.expect)(descriptionComp).to.have.prop('className', classes.description);\n(0, _chai.expect)(descriptionComp).to.have.text(descriptionText);",
            "err": {},
            "isRoot": false,
            "uuid": "1dfc94ed-8809-4fec-8ae1-88ff6de0f7c8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "renders provided helpText",
            "fullTitle": "Field renders provided helpText",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var helpText = 'Help! I need somebody!';\nvar id = 'unq-id';\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { id: id, helpText: helpText }));\nvar helpComp = wrapper.find(_Form.FormHelperText);\n(0, _chai.expect)(helpComp).to.be.present();\n(0, _chai.expect)(helpComp).to.have.prop('id', id + '-help');\n(0, _chai.expect)(helpComp.children()).to.have.length(1);\n(0, _chai.expect)(helpComp.childAt(0).text()).to.equal(helpText);",
            "err": {},
            "isRoot": false,
            "uuid": "f11413d6-8212-4a41-9d4e-0125b9351552",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "calls onChange",
            "fullTitle": "Field calls onChange",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var onChange = _sinon2.default.spy();\nvar data = 'Some value';\nvar componentProps = {\n  onChange: onChange\n};\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { componentProps: componentProps, data: data }));\nvar inputComp = wrapper.find(_Input2.default);\ninputComp.simulate('change', 'value');\n(0, _chai.expect)(onChange).to.be.calledWith('value');",
            "err": {},
            "isRoot": false,
            "uuid": "d4a6126b-6123-4601-ba92-f29167f2e33f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "has withLabel className ",
            "fullTitle": "Field has withLabel className ",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_Field.ConfiguredField, { LabelComponent: _Form.FormLabel, classes: classes }));\n(0, _chai.expect)(wrapper).prop('className').match(/withLabelClass/);",
            "err": {},
            "isRoot": false,
            "uuid": "f5f7ce8d-13e8-4638-a32f-1adafadc621b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "dc42a1ea-1217-4a88-892d-7235def8449b",
          "73ea5aa6-503c-43ad-a9b3-ffff6194e217",
          "84f2f4ff-af7f-4744-93ab-6edaa19f8bf5",
          "2e20aca0-d963-4a13-b94d-02f432620260",
          "1dfc94ed-8809-4fec-8ae1-88ff6de0f7c8",
          "f11413d6-8212-4a41-9d4e-0125b9351552",
          "d4a6126b-6123-4601-ba92-f29167f2e33f",
          "f5f7ce8d-13e8-4638-a32f-1adafadc621b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 32,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "1d41bb41-f362-4343-a481-40417a5b77de",
        "title": "FieldSet",
        "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
        "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "f6fbcc43-adf9-4581-a676-1d76f8201730",
            "title": "FieldSet - control",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
            "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "mounts (control)",
                "fullTitle": "FieldSet FieldSet - control mounts (control)",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {};\nvar data = {};\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSet, { classes: classes, schema: schema, data: data }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar ffComp = wrapper.find(_FieldSet.FieldSetContent);\n(0, _chai.expect)(ffComp).to.have.length(1);\n(0, _chai.expect)(ffComp).to.have.prop('schema', schema);\nvar legendComp = wrapper.find('legend');\n(0, _chai.expect)(legendComp).to.not.be.present();",
                "err": {},
                "isRoot": false,
                "uuid": "a7d884f7-b868-40b5-a34e-b01bad0b3883",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "a7d884f7-b868-40b5-a34e-b01bad0b3883"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "8a8f4a25-41c7-472a-84ae-98edde831c32",
            "title": "FieldSetObject",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
            "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "mounts with single field (control)",
                "fullTitle": "FieldSet FieldSetObject mounts with single field (control)",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {\n  type: 'object',\n  properties: {\n    name: {\n      'type': 'string',\n      'title': 'Name'\n    }\n  }\n};\nvar data = { name: 'Bob' };\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSetObject, { classes: classes, schema: schema, data: data }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\n(0, _chai.expect)(wrapper).to.have.prop('className').not.match(/rowClassName/);\nvar ffComp = wrapper.find(_FormField2.default);\n(0, _chai.expect)(ffComp).to.have.length(1);\n(0, _chai.expect)(ffComp).to.have.prop('path', 'name');\n(0, _chai.expect)(ffComp).to.have.prop('data', data.name);",
                "err": {},
                "isRoot": false,
                "uuid": "6a7151ae-c5e7-457c-8c91-4ed95ce993e6",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "respects orientation hint",
                "fullTitle": "FieldSet FieldSetObject respects orientation hint",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var schema = {\n  type: 'object',\n  properties: {\n    name: {\n      'type': 'string',\n      'title': 'Name'\n    }\n  }\n};\nvar uiSchema = {\n  'ui:orientation': 'row'\n};\nvar data = { name: 'Bob' };\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSetObject, { classes: classes, schema: schema, data: data, uiSchema: uiSchema }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\n(0, _chai.expect)(wrapper).to.have.prop('className').match(/rowClassName/);\nvar ffComp = wrapper.find(_FormField2.default);\n(0, _chai.expect)(ffComp).to.have.length(1);\n(0, _chai.expect)(ffComp).to.have.prop('path', 'name');\n(0, _chai.expect)(ffComp).to.have.prop('data', data.name);",
                "err": {},
                "isRoot": false,
                "uuid": "c94d6651-6322-4af1-ac89-c8a3b342ad6f",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "6a7151ae-c5e7-457c-8c91-4ed95ce993e6",
              "c94d6651-6322-4af1-ac89-c8a3b342ad6f"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 4,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "a242bea4-0335-438c-a174-9c2f57e4f3c8",
            "title": "FieldSetArray",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
            "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "handles simple, orderable list of strings",
                "fullTitle": "FieldSet FieldSetArray handles simple, orderable list of strings",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var path = 'names';\nvar defaultValue = 'abc';\nvar startIdx = 2;\nvar schema = {\n  type: 'array',\n  title: 'My list',\n  items: {\n    'type': 'string',\n    'title': 'Name',\n    'default': defaultValue\n  }\n};\nvar onMoveItemUp = _sinon2.default.stub();\nvar onMoveItemDown = _sinon2.default.stub();\nvar onDeleteItem = _sinon2.default.stub();\n(0, _forEach2.default)([0, 1], function (i) {\n  return onMoveItemUp.withArgs(path, startIdx + i).returns('moveUp' + i);\n});\n(0, _forEach2.default)([0, 1], function (i) {\n  return onMoveItemDown.withArgs(path, startIdx + i).returns('moveDown' + i);\n});\n(0, _forEach2.default)([0, 1], function (i) {\n  return onDeleteItem.withArgs(path, startIdx + i).returns('deleteItem' + i);\n});\nvar uiSchema = {\n  items: {\n    'ui:widget': 'textarea'\n  }\n};\nvar data = ['Bob', 'Harry'];\nvar onAddItem = _sinon2.default.spy();\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSetArray, {\n  startIdx: startIdx,\n  onAddItem: onAddItem,\n  onMoveItemUp: onMoveItemUp,\n  onMoveItemDown: onMoveItemDown,\n  onDeleteItem: onDeleteItem,\n  uiSchema: uiSchema,\n  path: path,\n  classes: classes,\n  schema: schema,\n  data: data\n}));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar ffComp = wrapper.find(_FieldSet.ReorderableFormField);\n(0, _chai.expect)(ffComp).to.have.length(2);\n(0, _forEach2.default)([0, 1], function (i) {\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('path', 'names[' + (i + startIdx) + ']');\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('data', data[i]);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('schema', schema.items);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('uiSchema', uiSchema.items);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('onMoveItemUp', 'moveUp' + i);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('onMoveItemDown', 'moveDown' + i);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('onDeleteItem', 'deleteItem' + i);\n});\n(0, _chai.expect)(ffComp.at(0)).to.have.prop('first', true);\n(0, _chai.expect)(ffComp.at(0)).to.have.prop('last', false);\n(0, _chai.expect)(ffComp.at(1)).to.have.prop('first', false);\n(0, _chai.expect)(ffComp.at(1)).to.have.prop('last', true);\nvar addButton = wrapper.find(_IconButton2.default);\n(0, _chai.expect)(addButton).to.be.present();\naddButton.simulate('click');\n(0, _chai.expect)(onAddItem).to.be.calledWith(path, defaultValue);",
                "err": {},
                "isRoot": false,
                "uuid": "b265eb21-5389-46e3-88dd-515cf1e1cd80",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "handles simple, fixed list of strings",
                "fullTitle": "FieldSet FieldSetArray handles simple, fixed list of strings",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var path = 'names';\nvar schema = {\n  type: 'array',\n  title: 'My list',\n  items: [{\n    'type': 'string',\n    'title': 'Name'\n  }, {\n    'type': 'boolean',\n    'title': 'Name'\n  }]\n};\nvar uiSchema = {\n  items: [{\n    'ui:widget': 'textarea'\n  }, {\n    'ui:widget': 'checkbox'\n  }]\n};\nvar data = ['Bob', false];\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSetArray, { uiSchema: uiSchema, path: path, classes: classes, schema: schema, data: data }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar ffComp = wrapper.find(_FormField2.default);\nvar rffComp = wrapper.find(_FieldSet.ReorderableFormField);\n(0, _chai.expect)(ffComp).to.have.length(2);\n(0, _chai.expect)(rffComp).to.have.length(0);\n(0, _forEach2.default)([0, 1], function (idx) {\n  (0, _chai.expect)(ffComp.at(idx)).to.have.prop('path', 'names[' + idx + ']');\n  (0, _chai.expect)(ffComp.at(idx)).to.have.prop('data', data[idx]);\n  (0, _chai.expect)(ffComp.at(idx)).to.have.prop('schema', schema.items[idx]);\n  (0, _chai.expect)(ffComp.at(idx)).to.have.prop('uiSchema', uiSchema.items[idx]);\n});",
                "err": {},
                "isRoot": false,
                "uuid": "7a269806-5cc4-435b-8c84-077cd9aa9915",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "handles simple, fixed list of strings with additional items",
                "fullTitle": "FieldSet FieldSetArray handles simple, fixed list of strings with additional items",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var path = 'names';\nvar onMoveItemUp = 'onMoveItemUp';\nvar onMoveItemDown = 'onMoveItemDown';\nvar onDeleteItem = 'onDeleteItem';\nvar schema = {\n  type: 'array',\n  title: 'My list',\n  items: [{\n    'type': 'string',\n    'title': 'Name'\n  }, {\n    'type': 'boolean',\n    'title': 'Name'\n  }],\n  additionalItems: {\n    'type': 'string',\n    'title': 'Name'\n  }\n};\nvar uiSchema = {\n  items: [{\n    'ui:widget': 'textarea'\n  }, {\n    'ui:widget': 'checkbox'\n  }],\n  additionalItems: {\n    'ui:title': 'Children'\n  }\n};\nvar data = ['Bob', false, 'Harry', 'Susan'];\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawFieldSetArray, {\n  onMoveItemUp: onMoveItemUp,\n  onMoveItemDown: onMoveItemDown,\n  onDeleteItem: onDeleteItem,\n  uiSchema: uiSchema,\n  path: path,\n  classes: classes,\n  schema: schema,\n  data: data\n}));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar ffComp = wrapper.find(_FormField2.default);\n(0, _chai.expect)(ffComp).to.have.length(2);\n(0, _forEach2.default)([0, 1], function (i) {\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('path', 'names[' + i + ']');\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('data', data[i]);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('schema', schema.items[i]);\n  (0, _chai.expect)(ffComp.at(i)).to.have.prop('uiSchema', uiSchema.items[i]);\n  (0, _chai.expect)(ffComp.at(i)).to.not.have.prop('onMoveItemUp');\n  (0, _chai.expect)(ffComp.at(i)).to.not.have.prop('onMoveItemDown');\n  (0, _chai.expect)(ffComp.at(i)).to.not.have.prop('onDeleteItem');\n});\nvar fsArrayComp = wrapper.find(_FieldSet.FieldSetArray);\n(0, _chai.expect)(fsArrayComp).to.be.present();\n(0, _chai.expect)(fsArrayComp).to.have.prop('path', path);\n(0, _chai.expect)(fsArrayComp).to.have.prop('data').deep.equal(['Harry', 'Susan']);\n(0, _chai.expect)(fsArrayComp).to.have.prop('schema').deep.equal({ type: 'array', items: schema.additionalItems });\n(0, _chai.expect)(fsArrayComp).to.have.prop('uiSchema', uiSchema.additionalItems);\n(0, _chai.expect)(fsArrayComp).to.have.prop('startIdx', schema.items.length);\n(0, _chai.expect)(fsArrayComp).to.have.prop('onMoveItemUp', onMoveItemUp);\n(0, _chai.expect)(fsArrayComp).to.have.prop('onMoveItemDown', onMoveItemDown);\n(0, _chai.expect)(fsArrayComp).to.have.prop('onDeleteItem', onDeleteItem);",
                "err": {},
                "isRoot": false,
                "uuid": "64557c0e-e90d-4a0c-a9a3-3ffca8d2e033",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "b265eb21-5389-46e3-88dd-515cf1e1cd80",
              "7a269806-5cc4-435b-8c84-077cd9aa9915",
              "64557c0e-e90d-4a0c-a9a3-3ffca8d2e033"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 22,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "211bc0d0-a078-473a-992d-830a0859fcc1",
            "title": "ReorderControls",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
            "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "renders buttons with callbacks",
                "fullTitle": "FieldSet ReorderControls renders buttons with callbacks",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "// prepare\nvar onMoveItemUp = _sinon2.default.spy();\nvar onMoveItemDown = _sinon2.default.spy();\nvar onDeleteItem = _sinon2.default.spy();\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawReorderControls, {\n  onMoveItemDown: onMoveItemDown,\n  onDeleteItem: onDeleteItem,\n  onMoveItemUp: onMoveItemUp,\n  classes: classes\n}));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar buttonList = wrapper.find(_IconButton2.default);\n(0, _chai.expect)(buttonList).to.have.length(3);\nbuttonList.at(0).simulate('click');\n(0, _chai.expect)(onMoveItemUp).to.have.been.called;\nbuttonList.at(1).simulate('click');\n(0, _chai.expect)(onMoveItemDown).to.have.been.called;\nbuttonList.at(2).simulate('click');\n(0, _chai.expect)(onDeleteItem).to.have.been.called;",
                "err": {},
                "isRoot": false,
                "uuid": "e7251589-351a-4471-ab20-176d7a249a1d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "ReorderControls - first",
                "fullTitle": "FieldSet ReorderControls ReorderControls - first",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawReorderControls, { first: true, last: false, classes: classes }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar buttonList = wrapper.find(_IconButton2.default);\n(0, _chai.expect)(buttonList).to.have.length(3);\n(0, _chai.expect)(buttonList.at(0)).to.have.prop('disabled', true);\n(0, _chai.expect)(buttonList.at(1)).to.have.prop('disabled', false);\n(0, _chai.expect)(buttonList.at(2)).to.not.have.prop('disabled');",
                "err": {},
                "isRoot": false,
                "uuid": "554379ea-be27-4f57-958b-fbad7e10df2d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "ReorderControls - last",
                "fullTitle": "FieldSet ReorderControls ReorderControls - last",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawReorderControls, { first: false, last: true, classes: classes }));\n// check\n(0, _chai.expect)(wrapper).to.have.length(1);\nvar buttonList = wrapper.find(_IconButton2.default);\n(0, _chai.expect)(buttonList).to.have.length(3);\n(0, _chai.expect)(buttonList.at(0)).to.have.prop('disabled', false);\n(0, _chai.expect)(buttonList.at(1)).to.have.prop('disabled', true);\n(0, _chai.expect)(buttonList.at(2)).to.not.have.prop('disabled');",
                "err": {},
                "isRoot": false,
                "uuid": "c4bf5acf-602f-427f-b3d3-a7d6c92a2bdf",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "e7251589-351a-4471-ab20-176d7a249a1d",
              "554379ea-be27-4f57-958b-fbad7e10df2d",
              "c4bf5acf-602f-427f-b3d3-a7d6c92a2bdf"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 6,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "69c0e924-474a-4a13-a692-9bbf5406d65a",
            "title": "ReorderableFormField",
            "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
            "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "ReorderableFormField - control",
                "fullTitle": "FieldSet ReorderableFormField ReorderableFormField - control",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var path = 'path';\nvar first = 'first';\nvar last = 'last';\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FieldSet.RawReorderableFormField, {\n  path: path,\n  first: first,\n  last: last,\n  classes: classes\n}));\n// check\nvar ffComp = wrapper.find(_FormField2.default);\n(0, _chai.expect)(ffComp).to.have.length(1);\nvar controls = wrapper.find(_FieldSet.ReorderControls);\n(0, _chai.expect)(controls).to.have.length(1);\n(0, _chai.expect)(controls).to.have.prop('first', first);\n(0, _chai.expect)(controls).to.have.prop('last', last);",
                "err": {},
                "isRoot": false,
                "uuid": "67a38bd3-3e90-473b-b3b8-1fb153641529",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "67a38bd3-3e90-473b-b3b8-1fb153641529"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 2,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      },
      {
        "uuid": "6dad405e-0be6-4884-a590-4c3d9dca1ac0",
        "title": "FormField",
        "fullFile": "/Users/gk/Development/prm/material-ui-jsonschema-form/.tmp/mocha-webpack/1519594061340/bundle.js",
        "file": "/.tmp/mocha-webpack/1519594061340/bundle.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "mounts with single field (control)",
            "fullTitle": "FormField mounts with single field (control)",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var path = 'name';\nvar onChange = _sinon2.default.stub();\nvar schema = {\n  'type': 'string',\n  'title': 'First Name'\n};\nvar uiSchema = {};\nvar data = 'Bob';\nonChange.returns('onChangeFunc');\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FormField.RawFormField, { path: path, classes: classes, schema: schema, uiSchema: uiSchema, data: data, onChange: onChange }));\n// check\n(0, _chai.expect)(wrapper).to.be.present();\nvar ffComp = wrapper.find(_fields2.default);\n(0, _chai.expect)(ffComp).to.have.length(1);\n(0, _chai.expect)(ffComp).to.have.prop('className', classes.field);\n(0, _chai.expect)(ffComp).to.have.prop('path', path);\n(0, _chai.expect)(ffComp).to.have.prop('schema', schema);\n(0, _chai.expect)(ffComp).to.have.prop('data', data);\n(0, _chai.expect)(ffComp).to.have.prop('uiSchema', uiSchema);\n(0, _chai.expect)(onChange).calledWith(path);\n(0, _chai.expect)(ffComp).to.have.prop('onChange', 'onChangeFunc');",
            "err": {},
            "isRoot": false,
            "uuid": "f54a62a8-f1d1-4089-af13-1c4529024633",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "spreads additional properties to Field",
            "fullTitle": "FormField spreads additional properties to Field",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var schema = {\n  name: {\n    'type': 'string'\n  }\n};\nvar myProp = 'blah';\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FormField.RawFormField, { classes: classes, schema: schema, myProp: myProp }));\n// check\n(0, _chai.expect)(wrapper).to.be.present();\nvar ffComp = wrapper.find(_fields2.default);\n(0, _chai.expect)(ffComp).to.have.prop('myProp', myProp);",
            "err": {},
            "isRoot": false,
            "uuid": "dd99f72b-7b7c-4bcc-9495-e347a654826c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "renders object as FieldSet, passing all properties",
            "fullTitle": "FormField renders object as FieldSet, passing all properties",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var onChange = _sinon2.default.stub();\nvar path = 'name';\nvar schema = {\n  'type': 'object',\n  'properties': {\n    firstName: {\n      type: 'string',\n      title: 'First Name'\n    },\n    surname: {\n      type: 'string',\n      title: 'Surname'\n    }\n  }\n};\nvar data = {\n  firstName: 'Bob',\n  surname: 'Hope'\n};\nvar uiSchema = {\n  firstName: {},\n  surname: {}\n};\n// act\nvar wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FormField.RawFormField, { classes: classes, uiSchema: uiSchema, path: path, schema: schema, data: data, onChange: onChange }));\n// check\n(0, _chai.expect)(wrapper).to.be.present();\nvar fsComp = wrapper.find(_FieldSet2.default);\n(0, _chai.expect)(fsComp).to.be.have.length(1);\n(0, _chai.expect)(fsComp).to.have.prop('path', path);\n(0, _chai.expect)(fsComp).to.have.prop('schema', schema);\n(0, _chai.expect)(fsComp).to.have.prop('data', data);\n(0, _chai.expect)(fsComp).to.have.prop('uiSchema', uiSchema);\n(0, _chai.expect)(fsComp).to.have.prop('onChange', onChange);",
            "err": {},
            "isRoot": false,
            "uuid": "b75706e5-6dbe-406e-97cf-bd4e6d588621",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f54a62a8-f1d1-4089-af13-1c4529024633",
          "dd99f72b-7b7c-4bcc-9495-e347a654826c",
          "b75706e5-6dbe-406e-97cf-bd4e6d588621"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 4,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}